# Generated by Django 2.2.28 on 2022-08-24 06:32

from decimal import Decimal
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('payments', '0012_order_payment_method'),
    ]

    operations = [
        migrations.AddField(
            model_name='customergrouptimeslotprice',
            name='price_tax_free',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='This will override product tax free price when applicable.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='price without VAT'),
        ),
        migrations.AddField(
            model_name='ordercustomergroupdata',
            name='product_cg_price_tax_free',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax free price of the product at that given time.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='price without VAT'),
        ),
        migrations.AddField(
            model_name='product',
            name='price_tax_free',
            field=models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='price without VAT'),
        ),
        migrations.AddField(
            model_name='productcustomergroup',
            name='price_tax_free',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='This will override product tax free price field.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='price without VAT'),
        ),
        migrations.AddField(
            model_name='timeslotprice',
            name='price_tax_free',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='This will override product tax free price when applicable', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='price without VAT'),
        ),
    ]
